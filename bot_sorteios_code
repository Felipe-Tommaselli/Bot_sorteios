import pyautogui, time, random, keyboard, win32gui


def emoji_fixo():

    pyautogui.hotkey("ctrl", "v")

def emoji_variavel():

    pyautogui.hotkey("win", ".")
    time.sleep(2)

    flags, hcursor, (x, y) = win32gui.GetCursorInfo()
    contador1 = contador2 = 0
    pic1 = pyautogui.screenshot(region=(x, y + 80, 5, 5))
    pic2 = pyautogui.screenshot(region=(x, y - 390, 5, 5))
    width1, height1 = pic1.size
    width2, height2 = pic2.size
    for fx in range(0, width1, 1):
        for fy in range(0, height1, 1):

            r1, g1, b1 = pic1.getpixel((fx, fy))
            r2, g2, b2 = pic2.getpixel((fx, fy))
            if b1 in [17, 160, 51, 99, 79, 116, 139, 149, 128, 242, 208, 97, 223, 208, 137, 157]:
                contador1 += 1
            if b2 in [17, 160, 51, 99, 79, 116, 139, 149, 128, 242, 208, 97, 223, 208, 137, 157]:
                contador2 += 1

    time.sleep(5)
    print(f"contador1: {contador1}")
    print(f"contador2: {contador2}")
    if contador1 >= width1 * height1 * 0.85:

        print("baixo")
        time.sleep(4)
        pyautogui.move(0, 270)  # se aparecer pra baixo
        pyautogui.click()
        pyautogui.move(0, -270)  # se aparecer pra baixo
        pyautogui.click()

    elif contador2 >= width2 * height2 * 0.85:

        print("cima")
        time.sleep(4)
        pyautogui.move(0, -220)  # se aparecer pra cima
        pyautogui.click()
        pyautogui.move(0, 220)  # se aparecer pra cima
        pyautogui.click()

    else:

        pyautogui.hotkey("ctrl", "v")

def clean():
    # muito lento, usar a win32
    if keyboard.is_pressed("c") == True:
        pyautogui.click()
        pyautogui.hotkey("ctrl", "a")
        pyautogui.press("delete")
        time.sleep(random.uniform(10, 15))


def pic_check():
    # não ta funcionando ainda
    contador = 0
    pic = pyautogui.screenshot(region=(70, 800, 500, 80))
    width, height = pic.size
    for x in range(0, width, 1):
        for y in range(0, height, 1):

            r, g, b = pic.getpixel((x, y))

            if b in [
                255,
                0,
            ]:
                contador += 1

    if contador >= width * height * 0.8:
        pyautogui.alert("ERRO ERRO ERRO")
        time.sleep(random.uniform(1000, 1200))


print("Working...")
palavras = [
    "kiwi",
    "abacaxi",
    "cereja",
    "morango",
    "laranja",
    "melancia",
    "tangerina",
    "caju",
    "banana",
    "framboesa",
    "jabuticaba",
    "manga",
    "pera",
    "amora",
    "uva",
    "lichia",
    "pitaia",
    "abacate",
    "acerola",
    "cacau",
    "caqui",
    "carambola",
    "coco",
    "figo",
    "goiaba",
    "jaca",
    "pitanga",
    "pequi",
    "maria",
    "duda",
    "azul",
    "verde",
    "vermelho",
    "amarelo",
    "preto",
    "rosa",
    "roxo",
    "branco",
    "marrom",
]
# não esquece de abrir e fechar aspas nem da virgula
i = 0
escolhe = 0

f = open("log.txt", "a")
f.write(
    f"\n\033[1;31------ {time.strftime('%d-%m-%Y %H:%M:%S', time.localtime())} --------\033[m\n"
)
f.close()

time.sleep(7)
# melhor não mexer nesse tempo aqui
pyautogui.move(0,-220)
while keyboard.is_pressed("shift") == False:

    clean()
    word = random.choice(palavras)

    pyautogui.click()
    pyautogui.typewrite(word)
    escolhe = random.randint(1, 3)

    if escolhe == 3:
        emoji_variavel()
    elif escolhe == 2:
        time.sleep(random.uniform(5, 10))

    if word == " ":
        emoji_variavel()

    # esse tempo aq de baixo voce mexe no intervalo
    # i é o numero de vezes que  o programa rodou
    # se quiser aumentar u diminuir o tempo pode
    if i > 15:
        time.sleep(random.uniform(i - 10, i))  #
    elif i > 50:
        time.sleep(random.uniform(i - 30, i))
    else:
        time.sleep(random.uniform(8, 12))
    if i == 200:
        time.sleep(random.uniform(3000, 3500))

    i += 1
    pyautogui.press("enter")

    print(i)
    f2 = open("log.txt", "a")
    f2.write(str(i))
    f2.close()
